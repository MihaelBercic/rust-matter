///
/// @author Mihael Berčič
/// @date 24. 9. 24
///
pub enum GlobalStatusCode {
    Success = 0x00,
    Failure = 0x01,
    InvalidSubscription = 0x7D,
    UnsupportedAccess = 0x7E,
    UnsupportedEndpoint = 0x7F,
    InvalidAction = 0x80,
    UnsupportedCommand = 0x81,
    InvalidCommand = 0x85,
    UnsupportedAttribute = 0x86,
    ConstraintError = 0x87,
    UnsupportedWrite = 0x88,
    ResourceExhausted = 0x89,
    NotFound = 0x8B,
    UnreportableAttribute = 0x8C,
    InvalidDataType = 0x8D,
    UnsupportedRead = 0x8F,
    DataVersionMismatch = 0x92,
    Timeout = 0x93,
    UnsupportedNode = 0x9B,
    Busy = 0x9C,
    UnsupportedCluster = 0xC3,
    NoUpstreamSubscription = 0xC5,
    NeedsTimedInteraction = 0xC6,
    UnsupportedEvent = 0xC7,
    PathsExhausted = 0xC8,
    TimedRequestMismatch = 0xC9,
    FailsafeRequired = 0xCA,
    InvalidInState = 0xCB,
}


#[derive(Clone, Debug)]
pub enum QueryParameter<T> {
    Wildcard,
    Specific(T),
}

#[derive(Eq, Hash, PartialEq, Clone, Copy, Debug)]
#[repr(u32)]
pub enum ClusterID {
    BasicInformation = 0x0028,
    OnOff = 0x0006,
    GeneralCommissioning = 0x0030,
    NetworkCommissioning = 0x0031,
    OperationalCredentials = 0x003E,
    AdministratorCommissioning = 0x003C,
    Identify = 0x0003,
    Groups = 0x0004,
    Scenes = 0x0005,
    LevelControl = 0x0008,
    Alarms = 0x0009,
    Time = 0x000A,
    BinaryInputBasic = 0x000F,
    PowerConfiguration = 0x0001,
    DeviceTemperatureConfiguration = 0x0002,
    SoilMoistureMeasurement = 0x0408,
    TemperatureMeasurement = 0x0402,
    PressureMeasurement = 0x0403,
    FlowMeasurement = 0x0404,
    OccupancySensing = 0x0406,
    CarbonMonoxideMeasurement = 0x040C,
    CarbonDioxideMeasurement = 0x040D,
    PM10Measurement = 0x040E,
    PM25Measurement = 0x042A,
    OzoneMeasurement = 0x0415,
    TargetNavigator = 0x0505,
    AudioOutput = 0x050B,
    ContentLauncher = 0x050A,
    KeypadInput = 0x0509,
    MediaPlayback = 0x0506,
    ApplicationBasic = 0x050D,
    ModeSelect = 0x0050,
    ProxyConfiguration = 0x0042,
    ProxyDiscovery = 0x0043,
    AccessControl = 0x001F,
    Descriptor = 0x001D,
    Thermostat = 0x0201,
    DoorLock = 0x0101,
    PumpConfigurationAndControl = 0x0200,
    AirQuality = 0x005B,
    FixedLabel = 0x0040,
    UserLabel = 0x0041,
    GroupKeyManagement = 0x003F,
    WakeOnLan = 0x0503,
    PowerSource = 0x004A,
    BridgedDeviceBasic = 0x0046,
    FanControl = 0x0202,
    RefrigeratorAlarm = 0x0057,
    BooleanState = 0x0045,
    RelativeHumiditySensor = 0x0405,
    TargetPosition = 0x0012,
    DoorLockUser = 0x0011,
    RelativeAirQuality = 0x0049,
    GeneralDiagnostics = 0x0033,
    OperationalState = 0x0060,
}

impl From<u32> for ClusterID {
    fn from(value: u32) -> Self {
        match value {
            0x0028 => ClusterID::BasicInformation,
            0x0006 => ClusterID::OnOff,
            0x0030 => ClusterID::GeneralCommissioning,
            0x0031 => ClusterID::NetworkCommissioning,
            0x003E => ClusterID::OperationalCredentials,
            0x003C => ClusterID::AdministratorCommissioning,
            0x0003 => ClusterID::Identify,
            0x0004 => ClusterID::Groups,
            0x0005 => ClusterID::Scenes,
            0x0008 => ClusterID::LevelControl,
            0x0009 => ClusterID::Alarms,
            0x000A => ClusterID::Time,
            0x000F => ClusterID::BinaryInputBasic,
            0x0001 => ClusterID::PowerConfiguration,
            0x0002 => ClusterID::DeviceTemperatureConfiguration,
            0x0408 => ClusterID::SoilMoistureMeasurement,
            0x0402 => ClusterID::TemperatureMeasurement,
            0x0403 => ClusterID::PressureMeasurement,
            0x0404 => ClusterID::FlowMeasurement,
            0x0406 => ClusterID::OccupancySensing,
            0x040C => ClusterID::CarbonMonoxideMeasurement,
            0x040D => ClusterID::CarbonDioxideMeasurement,
            0x040E => ClusterID::PM10Measurement,
            0x042A => ClusterID::PM25Measurement,
            0x0415 => ClusterID::OzoneMeasurement,
            0x0505 => ClusterID::TargetNavigator,
            0x050B => ClusterID::AudioOutput,
            0x050A => ClusterID::ContentLauncher,
            0x0509 => ClusterID::KeypadInput,
            0x0506 => ClusterID::MediaPlayback,
            0x050D => ClusterID::ApplicationBasic,
            0x0050 => ClusterID::ModeSelect,
            0x0042 => ClusterID::ProxyConfiguration,
            0x0043 => ClusterID::ProxyDiscovery,
            0x001F => ClusterID::AccessControl,
            0x001D => ClusterID::Descriptor,
            0x0201 => ClusterID::Thermostat,
            0x0101 => ClusterID::DoorLock,
            0x0200 => ClusterID::PumpConfigurationAndControl,
            0x005B => ClusterID::AirQuality,
            0x0040 => ClusterID::FixedLabel,
            0x0041 => ClusterID::UserLabel,
            0x003F => ClusterID::GroupKeyManagement,
            0x0503 => ClusterID::WakeOnLan,
            0x004A => ClusterID::PowerSource,
            0x0046 => ClusterID::BridgedDeviceBasic,
            0x0202 => ClusterID::FanControl,
            0x0057 => ClusterID::RefrigeratorAlarm,
            0x0045 => ClusterID::BooleanState,
            0x0405 => ClusterID::RelativeHumiditySensor,
            0x0012 => ClusterID::TargetPosition,
            0x0011 => ClusterID::DoorLockUser,
            0x0049 => ClusterID::RelativeAirQuality,
            0x0033 => ClusterID::GeneralDiagnostics,
            0x0060 => ClusterID::OperationalState,
            _ => panic!("Unknown cluster id: 0x{:04x}", value),
        }
    }
}

#[repr(u8)]
#[derive(Debug, Eq, PartialEq, Clone)]
pub enum InteractionProtocolOpcode {
    StatusResponse = 0x01,
    ReadRequest = 0x02,
    SubscribeRequest = 0x03,
    SubscribeResponse = 0x04,
    ReportData = 0x05,
    WriteRequest = 0x06,
    WriteResponse = 0x07,
    InvokeRequest = 0x08,
    InvokeResponse = 0x09,
    TimedRequest = 0x0A,
}

impl From<u8> for InteractionProtocolOpcode {
    fn from(value: u8) -> Self {
        match value {
            0x01 => InteractionProtocolOpcode::StatusResponse,
            0x02 => InteractionProtocolOpcode::ReadRequest,
            0x03 => InteractionProtocolOpcode::SubscribeRequest,
            0x04 => InteractionProtocolOpcode::SubscribeResponse,
            0x05 => InteractionProtocolOpcode::ReportData,
            0x06 => InteractionProtocolOpcode::WriteRequest,
            0x07 => InteractionProtocolOpcode::WriteResponse,
            0x08 => InteractionProtocolOpcode::InvokeRequest,
            0x09 => InteractionProtocolOpcode::InvokeResponse,
            0x0A => InteractionProtocolOpcode::TimedRequest,
            _ => panic!("Unknown Interaction Opcode"),
        }
    }
}
